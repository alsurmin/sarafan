plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}

group = 'letscode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

task buildFront(type: YarnTask) {
	args = ['build']
}

yarn_install.dependsOn(yarn_cache_clean)
buildFront.dependsOn(yarn_install)
processResources.dependsOn(buildFront)

repositories {
	mavenCentral()
}

node {
	version = '16.13.0'
	npmVersion = '2.1.5'
	yarnVersion = '0.16.1'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	implementation("org.springframework.boot:spring-boot-starter-websocket")
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
//	implementation('org.springframework.session:spring-session-jdbc')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE')
	implementation 'org.postgresql:postgresql'
	implementation 'javax.xml.bind:jaxb-api'
	implementation 'org.jsoup:jsoup:1.14.3'
	implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
	implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.3-1'
	implementation 'io.sentry:sentry-spring-boot-starter:5.4.0'
	implementation 'io.sentry:sentry-logback:5.4.0'
}

test {
	useJUnitPlatform()
}
